# Playbook to provision a micro EC2 instance and deploy the hub on it

# To use it, first `pip install boto`,
# set EC2_REGION, AWS_ACCESS_KEY and AWS_SECRET_KEY env variables
# and then run it as:
# `ansible-playbook -i inventory.ini playbook.yml \
# --extra-vars "keypair_name=marvin_rsa security_group=Relax"`

# TODO: move the deploy to a role
# TODO: tag the EC2 instances and manage inventory

- hosts: localhost
  connection: local
  gather_facts: False
  vars:
    instance_type: "t1.micro"
    image: "ami-d3675dba" # Debian Wheezy 7.4 PVM x86_64
    region: "us-east-1"
  tasks:
    - name: make one instance
      ec2: image={{ image }}
           instance_type={{ instance_type }}
           region={{ region }}
           key_name={{ keypair_name }}
           group={{ security_group }}
           wait=true
      register: ec2_info

    - add_host: hostname={{ item.public_dns_name }} groupname=hub_ec2_hosts
      with_items: ec2_info.instances

    - name: wait for instances to listen on port:22
      wait_for:
        state=started
        host={{ item.public_dns_name }}
        port=22
      with_items: ec2_info.instances

    - name: cache the ec2 node host key
      local_action: shell ssh-keyscan -H {{ item.public_dns_name }} >> ~/.ssh/known_hosts
      with_items: ec2_info.instances

- hosts: hub_ec2_hosts
  gather_facts: True
  remote_user: admin
  vars:
    tmp_dir: "/tmp/smarthome-hub-sync-deploy"
    home: "/home/admin"
    app: "{{ home }}/smarthome-hub-sync"
  tasks:
    - name: install rsync on the remote machine
      apt: pkg=rsync update_cache=yes cache_valid_time=3600
      sudo: yes

    - name: checkout the hub repo
      local_action: git dest={{ tmp_dir }}
          repo=git@github.com:smart-home/smarthome-hub-sync.git
    - local_action: file dest={{ tmp_dir }}/smarthome-remote-key mode=600

    - name: upload the hub code to the node
      synchronize: src={{ tmp_dir }}/ dest={{ app }}/

    - name: apt install
      apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - python-virtualenv
        - python-dev
        - build-essential
      sudo: yes

    # TODO: prebuild wheels of the dependencies

    - name: install requirements.txt
      pip: requirements={{ app }}/requirements.txt virtualenv={{ home }}/ENV/

    - name: mkdir logs
      file: dest={{ app }}/logs state=directory
    - name: mkdir var
      file: dest={{ app }}/var state=directory

    - name: get jq
      get_url: url=https://github.com/stedolan/jq/raw/gh-pages/download/linux64/jq
          dest={{ home }}/jq mode=0755
    - name: extract remote host
      command: "{{ home }}/jq --raw-output .remotehost {{ app }}/config.json"
      register: jq
    - name: cache the remote host key
      shell: ssh-keyscan -t ecdsa,rsa,dsa {{ jq.stdout }} >> ~/.ssh/known_hosts

    - name: create cron entry
      cron: name="run smarthome-hub"
          job="cd '{{ app }}'; '{{ app }}/smarthome-hub-runner.sh'"
