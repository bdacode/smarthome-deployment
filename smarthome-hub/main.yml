---
- name: install rsync on the remote machine
  apt: pkg=rsync update_cache=yes cache_valid_time=3600
  sudo: yes

- name: checkout the hub repo
  local_action: git dest={{ tmp_dir }}
      repo=git@github.com:smart-home/smarthome-hub-sync.git
- local_action: file dest={{ tmp_dir }}/smarthome-remote-key mode=600

- name: upload the hub code to the node
  synchronize: src={{ tmp_dir }}/ dest={{ app }}/

- name: apt install
  apt: pkg={{ item }} update_cache=yes cache_valid_time=3600
  with_items:
    - python-virtualenv
    - python-dev
    - build-essential
  sudo: yes

# TODO: prebuild wheels of the dependencies

- name: install requirements.txt
  pip: requirements={{ app }}/requirements.txt virtualenv={{ home }}/ENV/

- name: get jq
  get_url: url=https://github.com/stedolan/jq/raw/gh-pages/download/linux64/jq
      dest={{ home }}/jq mode=0755
- name: extract remote host
  command: "{{ home }}/jq --raw-output .remotehost {{ app }}/config.json"
  register: jq
- name: cache the remote host key
  shell: ssh-keyscan -t ecdsa,rsa,dsa {{ jq.stdout }} >> ~/.ssh/known_hosts

- name: extract the folders that have to be created
  command: "{{ home }}/jq --raw-output '[.logs_path+(.logging_modules|.[]), .logs_path, .data_path, .watchdog_path]|.[]' {{ app }}/config.json"
  register: jq
- debug: var=jq.stdout_lines
- name: mkdir
  file: path={{ item }} state=directory
  with_items: jq.stdout_lines

- name: create cron entries
  cron: name="run '{{ item }}'"
      job="cd '{{ app }}'; '{{ app }}/{{ item }}'"
  with_items:
    - smarthome-hub-runner.sh
    - smarthome-hub-watchdog.sh
